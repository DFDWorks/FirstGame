////////////////////////////////////////
// Action2D.h 
//
// Authors: Fomin Eugene
//
// Description:
////////////////////////////////////////


////////////////////////////////////
#ifndef _Action2D_h_
#define _Action2D_h_


////////////////////////////////////
// Include
#include "GO_Cockroach.h"

	////////////////////////////////////
	// Enum 
	namespace ActionStatus
	{
		////////////////////////////////////
		enum Enum
		{
			None = 0,
			InProgress,
			Cached,
			Paused,
			Finished,
			Destroy
		};
	}


	////////////////////////////////////
	// Typedef
	PTR( Action2D );


	////////////////////////////////////
	// Class Action2D
	class Action2D
		: public SharedObject< Action2D >
	{
	public:
		

	public:
		////////////////////////////////////
		virtual ~Action2D();

		////////////////////////////////////
		virtual void update( F32 dt );

		////////////////////////////////////
		virtual bool play();

		////////////////////////////////////
		virtual void pause();

		////////////////////////////////////
		virtual void stop();

		////////////////////////////////////
		virtual void finish();

		////////////////////////////////////
		virtual void reset();

		////////////////////////////////////
		void setStatus( ActionStatus::Enum status );

		////////////////////////////////////
		ActionStatus::Enum getStatus() const { return m_status; }

		////////////////////////////////////
		void setTarget( const GameObjectPtr& target );

		////////////////////////////////////
		GameObjectPtr getTarget() const { return m_target.lock(); }

		////////////////////////////////////
		GameObject* getTargetPure() const { return m_targetPure; }

		////////////////////////////////////
		void setTag( S32 tag ){ m_tag = tag; }

		////////////////////////////////////
		S32 getTag() const { return m_tag; }

		////////////////////////////////////
		virtual void setProgress( F32 progress );

	protected:

		////////////////////////////////////
		Action2D();

		////////////////////////////////////
		bool init();

		////////////////////////////////////
		bool init( const Action2DPtr& obj );
        

	protected:
		GameObjectWPtr m_target;
		GameObject* m_targetPure;
		S32 m_tag;

		bool m_autoDestroy;

	private:
		ActionStatus::Enum m_status;
	}; 
#endif // _Action2D_h_
////////////////////////////////////
