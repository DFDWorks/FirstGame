////////////////////////////////////////
// TimeAction2D.h
//
// Authors: Fomin Eugene
//
// Description:
////////////////////////////////////////


////////////////////////////////////
#ifndef _Bfe_TimeAction2D_h_
#define _Bfe_TimeAction2D_h_


////////////////////////////////////
// Include
#include "Action2D.h"

	////////////////////////////////////
	// Typedef
	PTR( TimeAction2D )


	////////////////////////////////////
	// Class TimeAction2D
	class TimeAction2D
		: public Action2D
	{
	public:

	public:
		////////////////////////////////////
		virtual ~TimeAction2D();

		

		////////////////////////////////////
		virtual void update( F32 dt ) OVERRIDE;

		////////////////////////////////////
		virtual void stop() OVERRIDE;

		////////////////////////////////////
		virtual void finish() OVERRIDE;

		////////////////////////////////////
		virtual void setProgress( F32 progress ) OVERRIDE;

		////////////////////////////////////
		F32 getTimer() const { return m_timer; }

		////////////////////////////////////
		void setTimer( F32 timer ){ m_timer = timer; }

		////////////////////////////////////
		F32 getTime() const { return m_time; }

		////////////////////////////////////
		void setTime( F32 time ){ m_time = time; }

		////////////////////////////////////
		bool getCycled() const { return m_cycled; }

		////////////////////////////////////
		void setCycled( bool value ){ m_cycled = value; }

	protected:

		////////////////////////////////////
		TimeAction2D();

		////////////////////////////////////
		bool init();

		////////////////////////////////////
		bool init( const TimeAction2DPtr& obj );
                
	protected:

		F32 m_timer;
		F32 m_time;

		bool m_cycled;
	};
  
#endif // _Bfe_TimeAction2D_h_
////////////////////////////////////
